webpackHotUpdate("main",{

/***/ "./src/components/Badge/index.tsx":
/*!****************************************!*\
  !*** ./src/components/Badge/index.tsx ***!
  \****************************************/
/*! exports provided: BadgeVariant, Badge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export BadgeVariant */
/* unused harmony export Badge */
/* harmony import */ var _Users_erick_Develop_findup_findup_ui_kit_node_modules_core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/core-js/modules/es.object.keys.js */ "./node_modules/core-js/modules/es.object.keys.js");
/* harmony import */ var _Users_erick_Develop_findup_findup_ui_kit_node_modules_core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_erick_Develop_findup_findup_ui_kit_node_modules_core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Users_erick_Develop_findup_findup_ui_kit_node_modules_core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var _Users_erick_Develop_findup_findup_ui_kit_node_modules_core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Users_erick_Develop_findup_findup_ui_kit_node_modules_core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Users_erick_Develop_findup_findup_ui_kit_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var _Users_erick_Develop_findup_findup_ui_kit_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_Users_erick_Develop_findup_findup_ui_kit_node_modules_core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _fortawesome_fontawesome_free_css_all_min_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @fortawesome/fontawesome-free/css/all.min.css */ "./node_modules/@fortawesome/fontawesome-free/css/all.min.css");
/* harmony import */ var _fortawesome_fontawesome_free_css_all_min_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_fortawesome_fontawesome_free_css_all_min_css__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__);



var _excluded = ["label", "outlined", "variant"];

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var BadgeVariant;

(function (BadgeVariant) {
  BadgeVariant["default"] = "default";
  BadgeVariant["primary"] = "primary";
  BadgeVariant["secondary"] = "secondary";
  BadgeVariant["success"] = "success";
  BadgeVariant["info"] = "info";
  BadgeVariant["danger"] = "danger";
  BadgeVariant["warning"] = "warning";
})(BadgeVariant || (BadgeVariant = {}));

var Badge = function Badge(_ref) {
  var label = _ref.label,
      _ref$outlined = _ref.outlined,
      outlined = _ref$outlined === void 0 ? false : _ref$outlined,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? BadgeVariant["default"] : _ref$variant,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__["jsx"])("span", {
    className: classnames__WEBPACK_IMPORTED_MODULE_4___default()({
      "text-xs font-semibold inline-block py-1 px-2 rounded uppercase last:mr-0 mr-1": true,
      // Outline none
      'bg-gray-600 ': BadgeVariant["default"] == variant,
      'bg-teal-300 ': BadgeVariant.primary == variant,
      'bg-orange-400 ': BadgeVariant.secondary == variant,
      'bg-teal-400 ': BadgeVariant.success == variant,
      'bg-cyan-300 ': BadgeVariant.info == variant,
      'bg-amber-400 ': BadgeVariant.warning == variant,
      'bg-red-400 ': BadgeVariant.danger == variant,
      // Outline
      'outline outline-1 bg-transparent': outlined,
      'text-gray-600 outline-gray-600': BadgeVariant["default"] == variant && outlined,
      'text-teal-300 outline-teal-300': BadgeVariant.primary == variant && outlined,
      'text-orange-400 outline-orange-400': BadgeVariant.secondary == variant && outlined,
      'text-teal-400 outline-teal-400': BadgeVariant.success == variant && outlined,
      'text-cyan-300 outline-cyan-300': BadgeVariant.info == variant && outlined,
      'text-amber-400 outline-amber-400': BadgeVariant.warning == variant && outlined,
      'text-red-400 outline-red-400': BadgeVariant.danger == variant && outlined
    }),
    children: label
  });
};
Badge.displayName = "Badge";

try {
    // @ts-ignore
    Badge.displayName = "Badge";
    // @ts-ignore
    Badge.__docgenInfo = { "description": "", "displayName": "Badge", "props": { "outlined": { "defaultValue": { value: "false" }, "description": "", "name": "outlined", "required": false, "type": { "name": "boolean | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": true, "type": { "name": "string" } }, "variant": { "defaultValue": { value: "BadgeVariant.default" }, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "undefined" }, { "value": "\"default\"" }, { "value": "\"primary\"" }, { "value": "\"secondary\"" }, { "value": "\"success\"" }, { "value": "\"info\"" }, { "value": "\"danger\"" }, { "value": "\"warning\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/Badge/index.tsx#Badge"] = { docgenInfo: Badge.__docgenInfo, name: "Badge", path: "src/components/Badge/index.tsx#Badge" };
}
catch (__react_docgen_typescript_loader_error) { }


/***/ }),

/***/ "./src/index.tsx":
/*!***********************!*\
  !*** ./src/index.tsx ***!
  \***********************/
/*! exports provided: Button, Alert, Badge */
/*! exports used: Alert, Button */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _components_Button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Button */ "./src/components/Button/index.tsx");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "b", function() { return _components_Button__WEBPACK_IMPORTED_MODULE_0__["a"]; });

/* harmony import */ var _components_Alert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/Alert */ "./src/components/Alert/index.tsx");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _components_Alert__WEBPACK_IMPORTED_MODULE_1__["a"]; });

/* harmony import */ var _components_Badge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Badge */ "./src/components/Badge/index.tsx");




try {
    // @ts-ignore
    Button.displayName = "Button";
    // @ts-ignore
    Button.__docgenInfo = { "description": "", "displayName": "Button", "props": { "outlined": { "defaultValue": { value: "false" }, "description": "", "name": "outlined", "required": false, "type": { "name": "boolean | undefined" } }, "full": { "defaultValue": { value: "false" }, "description": "", "name": "full", "required": false, "type": { "name": "boolean | undefined" } }, "loading": { "defaultValue": { value: "false" }, "description": "", "name": "loading", "required": false, "type": { "name": "boolean | undefined" } }, "onClick": { "defaultValue": null, "description": "", "name": "onClick", "required": false, "type": { "name": "(() => void) | undefined" } }, "disabled": { "defaultValue": { value: "false" }, "description": "", "name": "disabled", "required": false, "type": { "name": "boolean | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": true, "type": { "name": "string" } }, "variant": { "defaultValue": { value: "ButtonVariant.default" }, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "undefined" }, { "value": "\"default\"" }, { "value": "\"primary\"" }, { "value": "\"secondary\"" }, { "value": "\"success\"" }, { "value": "\"info\"" }, { "value": "\"danger\"" }, { "value": "\"warning\"" }] } }, "size": { "defaultValue": { value: "ButtonSize.md" }, "description": "", "name": "size", "required": false, "type": { "name": "enum", "value": [{ "value": "undefined" }, { "value": "\"sm\"" }, { "value": "\"md\"" }, { "value": "\"lg\"" }] } }, "leftIcon": { "defaultValue": null, "description": "", "name": "leftIcon", "required": false, "type": { "name": "string | undefined" } }, "rightIcon": { "defaultValue": null, "description": "", "name": "rightIcon", "required": false, "type": { "name": "string | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/index.tsx#Button"] = { docgenInfo: Button.__docgenInfo, name: "Button", path: "src/index.tsx#Button" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    Alert.displayName = "Alert";
    // @ts-ignore
    Alert.__docgenInfo = { "description": "", "displayName": "Alert", "props": { "outlined": { "defaultValue": { value: "false" }, "description": "", "name": "outlined", "required": false, "type": { "name": "boolean | undefined" } }, "text": { "defaultValue": null, "description": "", "name": "text", "required": true, "type": { "name": "string" } }, "title": { "defaultValue": null, "description": "", "name": "title", "required": true, "type": { "name": "string" } }, "variant": { "defaultValue": { value: "AlertVariant.default" }, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "undefined" }, { "value": "\"default\"" }, { "value": "\"primary\"" }, { "value": "\"secondary\"" }, { "value": "\"success\"" }, { "value": "\"info\"" }, { "value": "\"danger\"" }, { "value": "\"warning\"" }] } }, "icon": { "defaultValue": { value: "warning" }, "description": "", "name": "icon", "required": false, "type": { "name": "string | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/index.tsx#Alert"] = { docgenInfo: Alert.__docgenInfo, name: "Alert", path: "src/index.tsx#Alert" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    Badge.displayName = "Badge";
    // @ts-ignore
    Badge.__docgenInfo = { "description": "", "displayName": "Badge", "props": { "outlined": { "defaultValue": { value: "false" }, "description": "", "name": "outlined", "required": false, "type": { "name": "boolean | undefined" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": true, "type": { "name": "string" } }, "variant": { "defaultValue": { value: "BadgeVariant.default" }, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "undefined" }, { "value": "\"default\"" }, { "value": "\"primary\"" }, { "value": "\"secondary\"" }, { "value": "\"success\"" }, { "value": "\"info\"" }, { "value": "\"danger\"" }, { "value": "\"warning\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/index.tsx#Badge"] = { docgenInfo: Badge.__docgenInfo, name: "Badge", path: "src/index.tsx#Badge" };
}
catch (__react_docgen_typescript_loader_error) { }


/***/ })

})
//# sourceMappingURL=main.1ab52e8c6aacbb7e5873.hot-update.js.map