{"version":3,"file":"main.b2306e8df939727643c7.hot-update.js","sources":["webpack:///./src/components/Button/index.tsx"],"sourcesContent":["import React from 'react';\nimport classname from 'classnames';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nexport enum ButtonVariant {\n    default = 'default',\n    primary = 'primary',\n    secondary = 'secondary',\n    success = 'success',\n    info = 'info',\n    danger = 'danger',\n    warning = 'warning',\n}\n\nexport enum ButtonSize {\n    sm = 'sm',\n    md = 'md',\n    lg = 'lg',\n}\n\nexport interface IProps {\n    outlined?: boolean;\n    onClick?: () => void;\n    disabled?: boolean;\n    label: string,\n    variant?: ButtonVariant\n    size?: ButtonSize,\n    leftIcon?: string,\n    rightIcon?: string,\n}\n\nexport const Button: React.FC<IProps> = ({ \n    label,\n    leftIcon,\n    rightIcon,\n    disabled = false,\n    outlined = false,\n    size = ButtonSize.md,\n    variant = ButtonVariant.default,\n    ...props\n }) => {\n\n    const getIcon = (icon: string) => {\n        return <i className={`fas fa-${icon}`}></i>\n    }\n\n    const getLeftIcon = () => {\n        if(leftIcon) return getIcon(leftIcon);\n    }\n\n    const getRightIcon = () => {\n        if (rightIcon) return getIcon(rightIcon);\n    }\n\n    return (\n        <button disabled={disabled} className={\n            classname({\n                'font-bold uppercase rounded shadow hover:shadow-lg mr-1 mb-1 ease-linear transition-all duration-150' :  true,\n                // Outline none\n                'bg-gray-600 text-white enabled:active:bg-gray-700 enabled:hover:bg-gray-700' : ButtonVariant.default == variant,\n                'bg-teal-300 text-white enabled:active:bg-teal-500 enabled:hover:bg-teal-500' : ButtonVariant.primary == variant,\n                'bg-orange-400 text-white enabled:active:bg-orange-600 enabled:hover:bg-orange-600' : ButtonVariant.secondary == variant,\n                'bg-teal-400 text-white enabled:active:bg-teal-500 enabled:hover:bg-teal-500' : ButtonVariant.success == variant,\n                'bg-cyan-300 text-white enabled:active:bg-cyan-500 enabled:hover:bg-cyan-500' : ButtonVariant.info == variant,\n                'bg-amber-400 text-white enabled:active:bg-amber-500 enabled:hover:bg-amber-500' : ButtonVariant.warning == variant,\n                'bg-red-400 text-white enabled:active:bg-red-500 enabled:hover:bg-red-500' : ButtonVariant.danger == variant,\n            \n                // Outline\n                'outline outline-2 bg-transparent' : outlined,\n                'text-gray-600 outline-gray-600  enabled:active:outline-gray-700 enabled:hover:text-white enabled:active:text-white enabled:hover:outline-gray-700' : ButtonVariant.default == variant && outlined,\n                'text-teal-300 outline-teal-300  enabled:active:outline-teal-500 enabled:hover:text-white enabled:active:text-white enabled:hover:outline-teal-500' : ButtonVariant.primary == variant && outlined,\n                'text-orange-400 outline-orange-400  enabled:active:outline-orange-600 enabled:hover:text-white enabled:active:text-white enabled:hover:outline-orange-600' : ButtonVariant.secondary == variant && outlined,\n                'text-teal-400 outline-teal-400  enabled:active:outline-teal-500 enabled:hover:text-white enabled:active:text-white enabled:hover:outline-teal-500' : ButtonVariant.success == variant && outlined,\n                'text-cyan-300 outline-cyan-300  enabled:active:outline-cyan-500 enabled:hover:text-white enabled:active:text-white enabled:hover:outline-cyan-500' : ButtonVariant.info == variant && outlined,\n                'text-amber-400 outline-amber-400  enabled:active:outline-amber-500 enabled:hover:text-white enabled:active:text-white enabled:hover:outline-amber-500' : ButtonVariant.warning == variant && outlined,\n                'text-red-400 outline-red-400  enabled:active:outline-red-500 enabled:hover:text-white enabled:active:text-white enabled:hover:outline-red-500' : ButtonVariant.danger == variant && outlined,\n\n                // Size\n                'text-xs px-4 py-2 ' : ButtonSize.sm == size,\n                'text-sm px-6 py-3 ' : ButtonSize.md == size,\n                'px-8 py-3 ' : ButtonSize.lg == size,\n\n                'opacity-25' : disabled\n\n            })\n        }>\n            {getLeftIcon()} {label} {getRightIcon()}\n        </button>\n    )\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AA1BA;AADA;AAAA;AAkCA;AA1DA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}