{"version":3,"file":"main.2dc8f3fec94d58bbc82d.hot-update.js","sources":["webpack:///./src/components/Button/index.tsx","webpack:///./src/index.tsx","webpack:///./stories/Button.stories.tsx"],"sourcesContent":["import React from 'react';\nimport classname from 'classnames';\n\nexport enum ButtonVariant {\n    default,\n    primary,\n    secondary,\n    success,\n    info,\n    danger,\n    warning,\n}\n\nexport enum ButtonSize {\n    small,\n    regular,\n    large,\n}\n\nexport interface IProps {\n    outlined?: boolean;\n    onClick?: () => void;\n    disabled?: boolean;\n    label: string,\n    variant: ButtonVariant\n    size: ButtonSize\n}\n\nexport const Button: React.FC<IProps> = ({ \n    label,\n    outlined = false,\n    size = ButtonSize.regular,\n    variant = ButtonVariant.default,\n    ...props\n }) => {\n    return (\n        <button className={\n            classname({\n                'font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg mr-1 mb-1 ease-linear transition-all duration-150' :  true,\n                'bg-blueGray-500 text-white active:bg-blueGray-600' : ButtonVariant.default == variant,\n            })\n        }>\n            {label}\n        </button>\n    )\n}","export { Button } from './components/Button';","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, {useState} from 'react';\\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\\n\\nimport { Button } from '../src';\\nimport { ButtonVariant } from '../src/components/Button';\\n\\nexport default {\\n  /* üëá The title prop is optional.\\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n  * to learn how to generate automatic titles\\n  */\\n  title: 'Button',\\n  component: Button,\\n\\n  //üëá Creates specific argTypes\\n  argTypes: {\\n    backgroundColor: { control: 'color' },\\n  },\\n  args: {\\n    //üëá Now all Button stories will be primary.\\n    primary: true,\\n  },\\n} as ComponentMeta<typeof Button>;\\n\\n\\n//üëá We create a ‚Äútemplate‚Äù of how args map to rendering\\nconst Template: ComponentStory<typeof Button> = (args) => <Button {...args} />;\\n\\n//üëá Each story then reuses that template\\nexport const Default = Template.bind({});\\nDefault.args = { label: 'Button Default', variant: ButtonVariant.default };\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":48,\"line\":27},\"endLoc\":{\"col\":78,\"line\":27},\"startBody\":{\"col\":48,\"line\":27},\"endBody\":{\"col\":78,\"line\":27}}};\n    \nimport React, {useState} from 'react';\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\n\nimport { Button } from '../src';\nimport { ButtonVariant } from '../src/components/Button';\n\nexport default {\n  /* üëá The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'Button',\n  component: Button,\n\n  //üëá Creates specific argTypes\n  argTypes: {\n    backgroundColor: { control: 'color' },\n  },\n  args: {\n    //üëá Now all Button stories will be primary.\n    primary: true,\n  },\n} as ComponentMeta<typeof Button>;\n\n\n//üëá We create a ‚Äútemplate‚Äù of how args map to rendering\nconst Template: ComponentStory<typeof Button> = (args) => <Button {...args} />;\n\n//üëá Each story then reuses that template\nexport const Default = Template.bind({});\nDefault.args = { label: 'Button Default', variant: ButtonVariant.default };\n\n\nDefault.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Default.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAFA;AADA;AAAA;AASA;AAjBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAFA;AAZA;AACA;AAmBA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}