{"version":3,"file":"main.540a0837e0fbf19d040b.hot-update.js","sources":["webpack:///./stories/Dropdown.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, {useState} from 'react';\\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\\n\\nimport { Dropdown } from '../src';\\nimport { ColorVariant } from '../src/types';\\n\\nexport default {\\n  /* üëá The title prop is optional.\\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n  * to learn how to generate automatic titles\\n  */\\n  title: 'Overlay/Dropdown',\\n  component: Dropdown,\\n\\n  args: {\\n    //üëá Now all Button stories will be primary.\\n    outlined: false,\\n  },\\n  argTypes: {\\n    outlined : { control : 'boolean'},\\n  }\\n} as ComponentMeta<typeof Dropdown>;\\n\\n\\n//üëá We create a ‚Äútemplate‚Äù of how args map to rendering\\nconst Template: ComponentStory<typeof Dropdown> = (args) => <Dropdown {...args} />;\\n\\n//üëá Each story then reuses that template\\nexport const Default = Template.bind({});\\nDefault.args = { label: 'Default',  variant: ColorVariant.default };\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":50,\"line\":26},\"endLoc\":{\"col\":82,\"line\":26},\"startBody\":{\"col\":50,\"line\":26},\"endBody\":{\"col\":82,\"line\":26}}};\n    \nimport React, {useState} from 'react';\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\n\nimport { Dropdown } from '../src';\nimport { ColorVariant } from '../src/types';\n\nexport default {\n  /* üëá The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'Overlay/Dropdown',\n  component: Dropdown,\n\n  args: {\n    //üëá Now all Button stories will be primary.\n    outlined: false,\n  },\n  argTypes: {\n    outlined : { control : 'boolean'},\n  }\n} as ComponentMeta<typeof Dropdown>;\n\n\n//üëá We create a ‚Äútemplate‚Äù of how args map to rendering\nconst Template: ComponentStory<typeof Dropdown> = (args) => <Dropdown {...args} />;\n\n//üëá Each story then reuses that template\nexport const Default = Template.bind({});\nDefault.args = { label: 'Default',  variant: ColorVariant.default };\n\n\nDefault.parameters = { storySource: { source: \"(args) => <Dropdown {...args} />\" }, ...Default.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AADA;AAZA;AACA;AAkBA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}