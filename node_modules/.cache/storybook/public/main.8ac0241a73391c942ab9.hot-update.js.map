{"version":3,"file":"main.8ac0241a73391c942ab9.hot-update.js","sources":["webpack:///./stories/Alert.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, {useState} from 'react';\\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\\n\\nimport { Alert } from '../src';\\nimport { AlertVariant } from '../src/components/Alert';\\n\\nexport default {\\n  /* üëá The title prop is optional.\\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n  * to learn how to generate automatic titles\\n  */\\n  title: 'Alert',\\n  component: Alert,\\n\\n  args: {\\n    //üëá Now all Button stories will be primary.\\n    outlined: false,\\n  },\\n  argTypes: {\\n    variant: {\\n      options: [AlertVariant.default,'primary', 'secondary', 'danger', 'warning', 'info', 'success'],\\n      control: { type: 'select' }\\n    },\\n    outlined : { control : 'boolean'},\\n    icon: {\\n      options: [ 'user', 'heart', 'check'],\\n      control: 'select' ,\\n      description: \\\"Icones do FontAwsome, passar somente o nome dele.\\\"\\n    },\\n  }\\n} as ComponentMeta<typeof Alert>;\\n\\n\\n//üëá We create a ‚Äútemplate‚Äù of how args map to rendering\\nconst Template: ComponentStory<typeof Alert> = (args) => <Alert {...args} />;\\n\\n//üëá Each story then reuses that template\\nexport const Default = Template.bind({});\\nDefault.args = { label: 'Alert Default', variant: AlertVariant.default };\\n\\nexport const Primary = Template.bind({});\\nPrimary.args = { label: 'Alert Primary', variant: AlertVariant.primary };\\n\\nexport const Secondary = Template.bind({});\\nSecondary.args = { label: 'Alert Secondary', variant: AlertVariant.secondary };\\n\\nexport const Success = Template.bind({});\\nSuccess.args = { label: 'Alert Success', variant: AlertVariant.success };\\n\\nexport const Danger = Template.bind({});\\nDanger.args = { label: 'Alert Danger', variant: AlertVariant.danger };\\n\\nexport const Warning = Template.bind({});\\nWarning.args = { label: 'Alert Warning', variant: AlertVariant.warning };\\n\\nexport const Info = Template.bind({});\\nInfo.args = { label: 'Alert Info', variant: AlertVariant.info };\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":47,\"line\":35},\"endLoc\":{\"col\":76,\"line\":35},\"startBody\":{\"col\":47,\"line\":35},\"endBody\":{\"col\":76,\"line\":35}},\"Primary\":{\"startLoc\":{\"col\":47,\"line\":35},\"endLoc\":{\"col\":76,\"line\":35},\"startBody\":{\"col\":47,\"line\":35},\"endBody\":{\"col\":76,\"line\":35}},\"Secondary\":{\"startLoc\":{\"col\":47,\"line\":35},\"endLoc\":{\"col\":76,\"line\":35},\"startBody\":{\"col\":47,\"line\":35},\"endBody\":{\"col\":76,\"line\":35}},\"Success\":{\"startLoc\":{\"col\":47,\"line\":35},\"endLoc\":{\"col\":76,\"line\":35},\"startBody\":{\"col\":47,\"line\":35},\"endBody\":{\"col\":76,\"line\":35}},\"Danger\":{\"startLoc\":{\"col\":47,\"line\":35},\"endLoc\":{\"col\":76,\"line\":35},\"startBody\":{\"col\":47,\"line\":35},\"endBody\":{\"col\":76,\"line\":35}},\"Warning\":{\"startLoc\":{\"col\":47,\"line\":35},\"endLoc\":{\"col\":76,\"line\":35},\"startBody\":{\"col\":47,\"line\":35},\"endBody\":{\"col\":76,\"line\":35}},\"Info\":{\"startLoc\":{\"col\":47,\"line\":35},\"endLoc\":{\"col\":76,\"line\":35},\"startBody\":{\"col\":47,\"line\":35},\"endBody\":{\"col\":76,\"line\":35}}};\n    \nimport React, {useState} from 'react';\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\n\nimport { Alert } from '../src';\nimport { AlertVariant } from '../src/components/Alert';\n\nexport default {\n  /* üëá The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'Alert',\n  component: Alert,\n\n  args: {\n    //üëá Now all Button stories will be primary.\n    outlined: false,\n  },\n  argTypes: {\n    variant: {\n      options: [AlertVariant.default,'primary', 'secondary', 'danger', 'warning', 'info', 'success'],\n      control: { type: 'select' }\n    },\n    outlined : { control : 'boolean'},\n    icon: {\n      options: [ 'user', 'heart', 'check'],\n      control: 'select' ,\n      description: \"Icones do FontAwsome, passar somente o nome dele.\"\n    },\n  }\n} as ComponentMeta<typeof Alert>;\n\n\n//üëá We create a ‚Äútemplate‚Äù of how args map to rendering\nconst Template: ComponentStory<typeof Alert> = (args) => <Alert {...args} />;\n\n//üëá Each story then reuses that template\nexport const Default = Template.bind({});;\nDefault.args = { label: 'Alert Default', variant: AlertVariant.default };\n\nexport const Primary = Template.bind({});;\nPrimary.args = { label: 'Alert Primary', variant: AlertVariant.primary };\n\nexport const Secondary = Template.bind({});;\nSecondary.args = { label: 'Alert Secondary', variant: AlertVariant.secondary };\n\nexport const Success = Template.bind({});;\nSuccess.args = { label: 'Alert Success', variant: AlertVariant.success };\n\nexport const Danger = Template.bind({});;\nDanger.args = { label: 'Alert Danger', variant: AlertVariant.danger };\n\nexport const Warning = Template.bind({});;\nWarning.args = { label: 'Alert Warning', variant: AlertVariant.warning };\n\nexport const Info = Template.bind({});\nInfo.args = { label: 'Alert Info', variant: AlertVariant.info };\n\n\nDefault.parameters = { storySource: { source: \"(args) => <Alert {...args} />\" }, ...Default.parameters };\nPrimary.parameters = { storySource: { source: \"(args) => <Alert {...args} />\" }, ...Primary.parameters };\nSecondary.parameters = { storySource: { source: \"(args) => <Alert {...args} />\" }, ...Secondary.parameters };\nSuccess.parameters = { storySource: { source: \"(args) => <Alert {...args} />\" }, ...Success.parameters };\nDanger.parameters = { storySource: { source: \"(args) => <Alert {...args} />\" }, ...Danger.parameters };\nWarning.parameters = { storySource: { source: \"(args) => <Alert {...args} />\" }, ...Warning.parameters };\nInfo.parameters = { storySource: { source: \"(args) => <Alert {...args} />\" }, ...Info.parameters };"],"mappingssourceRoot":""}